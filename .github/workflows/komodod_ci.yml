name: Komodo CI

on: [push, pull_request]

jobs:

  build-linux:

    name: Build (Linux)
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      - name: Install deps (Linux)
        run: |
          sudo apt-get remove php5.6-fpm php7.0-fpm php7.1-fpm php7.2-fpm php7.3-fpm
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -q \
                       build-essential \
                       pkg-config \
                       libc6-dev \
                       m4 \
                       g++-multilib \
                       autoconf \
                       libtool \
                       libncurses-dev \
                       unzip \
                       git \
                       python \
                       zlib1g-dev \
                       wget \
                       bsdmainutils \
                       automake \
                       libboost-all-dev \
                       libssl-dev \
                       libprotobuf-dev \
                       protobuf-compiler \
                       libqrencode-dev \
                       libdb++-dev \
                       ntp \
                       ntpdate \
                       nano \
                       software-properties-common \
                       curl \
                       libevent-dev \
                       libcurl4-gnutls-dev \
                       cmake \
                       clang \
                       libgnutls28-dev \
                       libsodium-dev -y
      
      - name: Build (Linux)
#         CONFIGURE_FLAGS='CPPFLAGS=-DTESTMODE' is a flag for some CC tests transactions - so DO NOT USE THIS CI ARTIFACTS IN PRODUCTION!!!
        run: |
          ./zcutil/fetch-params.sh
          CONFIGURE_FLAGS='CPPFLAGS=-DTESTMODE' ./zcutil/build.sh -j$(nproc)
          tar -czvf komodo-linux.tar.gz src/komodod src/komodo-cli

      - name: Upload komodo-linux.tar.gz as artifact
        uses: actions/upload-artifact@v1
        with:
          name: komodo-linux
          path: ./komodo-linux.tar.gz
#       - name: Install deps (macOS)
#         if: runner.os == 'macOS'
#         run: |
#           brew update
#           brew upgrade
#           brew tap discoteq/discoteq; brew install flock
#           brew install autoconf autogen automake
#           brew install gcc@8
#           brew install binutils
#           brew install protobuf
#           brew install coreutils
#           brew install wget
#           brew install python3
#           pip3 install setuptools wheel slick-bitcoinrpc pytest wget
#           ./zcutil/fetch-params.sh
#       - name: Build (macOS)
#         if: runner.os == 'macOS'
#         run: |
#           # flag for some CC tests transactions - so DO NOT USE THIS CI ARTIFACTS IN PRODUCTION!!!
#           export CPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/
#           CONFIGURE_FLAGS='CPPFLAGS=-DTESTMODE' ./zcutil/build-mac.sh -j4
#       - name: Run CC tests
#         if: runner.os == 'Linux' || runner.os == 'macOS'
#      - name: Run CC tests
#        if: runner.os == 'Linux'
#        run: |
#          cd qa/rpc-tests/cc_pytest
#          ./ci_setup.sh

  test-linux-faucet:

    name: Test (Linux/FaucetCC)
    runs-on: ubuntu-18.04
    needs: build-linux

    steps:
      - uses: actions/checkout@v1

      - name: Install deps (faucet test)
        run: |
          sudo apt-get update
          sudo apt-get install python3.6 python3-pip python3-setuptools libgnutls28-dev -y
          pip3 install setuptools wheel
          pip3 install slick-bitcoinrpc pytest wget

      - name: Download komodo-linux.tar.gz
        uses: actions/download-artifact@v1
        with:
          name: komodo-linux

      - name: Faucet Test (Linux)
        run: |
          mv komodo-linux/komodo-linux.tar.gz .
          mkdir -p src
          tar xzvf nspv-linux.tar.gz
          cd qa/rpc-tests/cc_pytest/
          ./ci_setup.sh test_faucet.py

  build-windows:

    name: Build (Windows)
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1

    - name: Build Win on Unix
      env:
        DEBIAN_FRONTEND: noninteractive
      if: runner.os == 'Linux'
      run: |
        sudo apt-get remove php5.6-fpm php7.0-fpm php7.1-fpm php7.2-fpm php7.3-fpm
        sudo apt-get update && sudo apt-get upgrade -y
        sudo apt-get install -q \
                       build-essential \
                       pkg-config \
                       libc6-dev \
                       m4 \
                       g++-multilib \
                       autoconf \
                       libtool \
                       libncurses-dev \
                       unzip \
                       git \
                       ncurses-dev \
                       python \
                       python-zmq \
                       zlib1g-dev \
                       libcurl4-gnutls-dev \
                       curl \
                       wget \
                       bsdmainutils \
                       automake \
                       libboost-all-dev \
                       libssl-dev \
                       libprotobuf-dev \
                       protobuf-compiler \
                       libqrencode-dev \
                       libdb++-dev \
                       ntp \
                       ntpdate \
                       nano \
                       cmake \
                       mingw-w64 \
                       libevent-dev \
                       libsodium-dev \
                       software-properties-common -y

        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source $HOME/.cargo/env
        rustup target add x86_64-pc-windows-gnu
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
        ./zcutil/fetch-params.sh
        ./zcutil/build-win.sh -j$(nproc)

    - name: Upload komodod.exe as artifact
      uses: actions/upload-artifact@v1
      with:
        name: komodod.exe
        path: ./src/komodod.exe

  #TODO: windows tests 
