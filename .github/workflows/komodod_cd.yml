# we are using separate workflow because CI producing test binaries with CPPFLAGS=-DTESTMODE

name: Komodo CD test releases


on:
  push:
    branches:
    - beta
    - dev
    - research
    - master

jobs:

  linux-build:
    name: Linux Build
    # using there as old release as possible with GHA worker to provide better compatibility
    runs-on: ubuntu-20.04
    steps:

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Shortify commit sha
        shell: bash
        run: echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
        id: shortify_commit

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install deps (Linux)
        run: |
          sudo apt-get update  # prevents repo404 errors on apt-remove below
          sudo apt-get remove php* msodbcsql17 mysql* powershell dotn*
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get upgrade -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
                build-essential \
                pkg-config \
                libc6-dev \
                m4 \
                g++-multilib \
                autoconf \
                libtool \
                ncurses-dev \
                unzip \
                git \
                python3-zmq \
                zlib1g-dev \
                wget \
                libcurl4-gnutls-dev \
                bsdmainutils \
                automake \
                curl \
                libsodium-dev
      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          ./zcutil/build.sh -j$(nproc)
          zip --junk-paths komodo-linux src/komodod src/komodo-cli
      - name: Upload komodo-linux.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: komodo-linux
          path: ./komodo-linux.zip
          
      - name: Login to docker hub
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build container
        run: docker build -f Dockerfile.release -t komodoofficial/komodo:cd_release_${{ steps.shortify_commit.outputs.sha_short }}_${{ steps.extract_branch.outputs.branch }} .

      - name: Push to docker hub
        uses: actions-hub/docker@master
        with:
          args: push ${{ secrets.DOCKER_ORG }}/komodo:cd_release_${{ steps.shortify_commit.outputs.sha_short }}_${{ steps.extract_branch.outputs.branch }}

  publish-release:
      name: Publishing CD releases
      runs-on: ubuntu-20.04
      needs: [linux-build]
      steps:
        - name: Download komodo-linux.zip
          uses: actions/download-artifact@v1
          with:
            name: komodo-linux  

        - name: Extract branch name
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: extract_branch

        - name: Shortify commit sha
          shell: bash
          run: echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
          id: shortify_commit

        - name: Create Release
          id: create_release
          uses: actions/create-release@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: cd_release_${{ steps.shortify_commit.outputs.sha_short }}_${{ steps.extract_branch.outputs.branch }}
            release_name: CD Release ${{ steps.shortify_commit.outputs.sha_short }} ${{ steps.extract_branch.outputs.branch }}
            draft: false
            prerelease: true
        - name: Upload Linux Release Asset
          id: upload-linux-release-asset 
          uses: actions/upload-release-asset@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: komodo-linux/komodo-linux.zip
            asset_name: komodo_${{ steps.shortify_commit.outputs.sha_short }}_${{ steps.extract_branch.outputs.branch }}_linux.zip
            asset_content_type: application/zip